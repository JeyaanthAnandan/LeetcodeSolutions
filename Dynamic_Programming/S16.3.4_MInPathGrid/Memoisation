class Solution {
public:
    int f(int i,int j,vector<vector<int>>& grid,vector<vector<int>>& dp){
        
        if(i==0 && j==0)return grid[0][0];
        if(i<0 || j<0)return 10000;
        if(dp[i][j]!=-1)return dp[i][j];
        
        int l = grid[i][j]+f(i-1,j,grid,dp);
        int r = grid[i][j]+f(i,j-1,grid,dp);

        return dp[i][j]=min(l,r);
    }

    int minPathSum(vector<vector<int>>& grid) {
        vector<vector<int>>dp;

        for(int i=0;i<grid.size();i++){
            vector<int>temp(grid[0].size(),-1);
            dp.emplace_back(temp);
        }

        return f(grid.size()-1,grid[0].size()-1,grid,dp);
    }
};
